# Build stage - Node.js 22 LTS
FROM node:22-alpine as builder

ENV NODE_ENV=production
ENV GENERATE_SOURCEMAP=false
ENV NODE_OPTIONS="--max_old_space_size=4096"
ENV DISABLE_HOT_RELOAD=true
ENV CI=true

WORKDIR /app

RUN apk add --no-cache --virtual .build-deps \
    python3 make g++ git

COPY frontend/package.json frontend/yarn.lock ./

RUN yarn install --frozen-lockfile --production=false --network-timeout 300000

COPY frontend/ .

RUN yarn build

RUN test -d build && test -f build/index.html

# Production stage - Nginx
FROM nginx:1.27-alpine

COPY --from=builder /app/build /usr/share/nginx/html

RUN cat <<'EOF' > /etc/nginx/conf.d/default.conf
server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
}
EOF

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
