# Build stage - Node.js 22 LTS (2025 stable)
FROM node:22-alpine as builder

# Variables d'environnement optimisées
ENV NODE_ENV=production
ENV GENERATE_SOURCEMAP=false
ENV NODE_OPTIONS="--max_old_space_size=4096"
ENV DISABLE_HOT_RELOAD=true
ENV CI=true

WORKDIR /app

# Installation dépendances système nécessaires (optimisé)
RUN apk add --no-cache --virtual .build-deps \
    python3 \
    make \
    g++ \
    git

# Copie des fichiers de configuration
COPY frontend/package*.json frontend/yarn.lock* ./

# Installation optimisée des dépendances avec résolution de conflits
RUN yarn install --frozen-lockfile --production=false --network-timeout 300000 || \
    npm ci --legacy-peer-deps --no-audit --no-fund

# Copie du code source
COPY frontend/ .

# Build optimisé avec gestion d'erreurs
RUN yarn build || npm run build

# Vérification du build
RUN test -d build && test -f build/index.html || exit 1

# Production stage - Nginx optimisé  
FROM nginx:1.27-alpine

# Copie des fichiers buildés
COPY --from=builder /app/build /usr/share/nginx/html

# Configuration Nginx optimisée pour React
RUN echo 'server { \
    listen 80; \
    server_name localhost; \
    root /usr/share/nginx/html; \
    index index.html; \
    \
    # Gestion SPA \
    location / { \
        try_files $uri $uri/ /index.html; \
    } \
    \
    # Cache optimisé pour les assets \
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ { \
        expires 1y; \
        add_header Cache-Control "public, immutable"; \
        access_log off; \
    } \
    \
    # Security headers \
    add_header X-Frame-Options DENY always; \
    add_header X-Content-Type-Options nosniff always; \
    add_header X-XSS-Protection "1; mode=block" always; \
}' > /etc/nginx/conf.d/default.conf

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]